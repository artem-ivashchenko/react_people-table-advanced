{"version":3,"sources":["utils/getLinkClassNavbar.ts","components/Navbar.tsx","App.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","utils/searchHelper.ts","components/SearchLink.tsx","types/QueryParams.ts","info/centuries.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","types/SortParams.ts","utils/getRelatives.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","index.tsx"],"names":["getLinkClass","_ref","isActive","classNames","Navbar","_jsx","className","role","children","_jsxs","NavLink","to","App","Outlet","HomePage","NotFoundPage","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","_ref2","_slicedToArray","key","value","delete","Array","isArray","part","append","set","SearchLink","params","props","_objectWithoutProperties","_excluded","_useSearchParams","useSearchParams","searchParams","Link","_objectSpread","search","QueryParams","CENTURIES","PeopleFilters","_useSearchParams2","setSearchParams","query","get","Query","sex","Sex","centuries","getAll","Centuries","type","placeholder","onChange","event","target","map","century","includes","current","filter","concat","_toConsumableArray","length","Loader","PersonLink","person","useLocation","pathname","slug","name","SortParams","getRelatives","relative","father","fatherName","mother","motherName","PeopleTable","people","slugId","useParams","sort","Sort","order","Order","useEffect","selectedPerson","document","querySelector","scrollIntoView","block","behavior","values","sortType","slice","toUpperCase","born","died","API_URL","wait","delay","Promise","resolve","setTimeout","_getPeople","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","then","fetch","response","json","stop","apply","arguments","PeoplePage","_useState","useState","_useState2","setPeople","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","hasError","setHasError","getPeople","catch","finally","filteredPeople","useMemo","preparedPeople","find","mom","dad","_person$fatherName","_person$motherName","toLowerCase","trim","Math","ceil","person1","person2","Name","localeCompare","Born","Died","Error","reverse","_Fragment","createRoot","getElementById","render","Router","Routes","Route","path","element","index","Navigate","replace"],"mappings":"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","file":"static/js/main.b363861e.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const getLinkClass = ({ isActive } : { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n","import { NavLink } from 'react-router-dom';\nimport { getLinkClass } from '../utils/getLinkClassNavbar';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const HomePage: React.FC = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","export const NotFoundPage: React.FC = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","export enum QueryParams {\n  Query = 'query',\n  Sex = 'sex',\n  Centuries = 'centuries',\n  Sort = 'sort',\n  Order = 'order',\n}\n","export const CENTURIES = ['16', '17', '18', '19', '20'];\n","import { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\nimport { QueryParams } from '../types/QueryParams';\nimport { CENTURIES } from '../info/centuries';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(QueryParams.Query) || '';\n  const sex = searchParams.get(QueryParams.Sex) || '';\n  const centuries = searchParams.getAll(QueryParams.Centuries) || [];\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const search = getSearchWith(searchParams, {\n      query: event.target.value || null,\n    });\n\n    setSearchParams(search);\n  };\n\n  const handleCenturyChange = (current: string) => {\n    return centuries.includes(current)\n      ? centuries.filter(century => century !== current)\n      : [...centuries, current];\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ sex: null }}\n          className={classNames({ 'is-active': !sex })}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={classNames({ 'is-active': sex === 'm' })}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={classNames({ 'is-active': sex === 'f' })}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map((century) => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={classNames('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n                params={{ centuries: handleCenturyChange(century) }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={classNames('button is-success', {\n                'is-outlined': !!centuries.length,\n              })}\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className={classNames('button is-link is-fullwidth', {\n            'is-outlined': !!centuries.length || sex || query,\n          })}\n          params={{ sex: null, centuries: null, query: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useLocation } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { search } = useLocation();\n\n  return (\n    <Link\n      to={{ pathname: `../${person.slug}`, search }}\n      className={person.sex === 'f' ? 'has-text-danger' : ''}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","export enum SortParams {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import { ReactNode } from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from '../components/PersonLink';\n\nexport const getRelatives = (\n  person: Person, relative: string,\n): ReactNode | string => {\n  if (relative === 'father') {\n    if (person.father) {\n      return <PersonLink person={person.father} />;\n    }\n\n    if (person.fatherName) {\n      return person.fatherName;\n    }\n  }\n\n  if (relative === 'mother') {\n    if (person.mother) {\n      return <PersonLink person={person.mother} />;\n    }\n\n    if (person.motherName) {\n      return person.motherName;\n    }\n  }\n\n  return '-';\n};\n","import { useEffect } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\nimport { SearchParams } from '../utils/searchHelper';\nimport { SortParams } from '../types/SortParams';\nimport { SearchLink } from './SearchLink';\nimport { QueryParams } from '../types/QueryParams';\nimport { getRelatives } from '../utils/getRelatives';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slugId } = useParams();\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get(QueryParams.Sort) || '';\n  const order = searchParams.get(QueryParams.Order) || '';\n\n  const handleSortingChange = (type: SortParams): SearchParams => {\n    if (!sort || sort !== type) {\n      return { sort: type, order: null };\n    }\n\n    if (!order) {\n      return { sort: type, order: 'desc' };\n    }\n\n    return { sort: null, order: null };\n  };\n\n  useEffect(() => {\n    const selectedPerson = document.querySelector('.has-background-warning');\n\n    if (selectedPerson) {\n      selectedPerson.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n      });\n    }\n  }, [slugId]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.values(SortParams).map((sortType) => (\n            <th key={sortType}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {sortType.slice(0, 1).toUpperCase() + sortType.slice(1)}\n                <SearchLink\n                  params={handleSortingChange(sortType)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('fas', {\n                      'fa-sort': sort !== sortType,\n                      'fa-sort-up': sort === sortType && !order,\n                      'fa-sort-down': sort === sortType && order,\n                    })}\n                    />\n                  </span>\n                </SearchLink>\n              </span>\n            </th>\n          ))}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <tr\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': slugId === person.slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{getRelatives(person, 'mother')}</td>\n            <td>{getRelatives(person, 'father')}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { QueryParams } from '../types/QueryParams';\nimport { SortParams } from '../types/SortParams';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(QueryParams.Query) || '';\n  const sex = searchParams.get(QueryParams.Sex) || '';\n  const centuries = searchParams.getAll(QueryParams.Centuries) || [];\n  const sort = searchParams.get(QueryParams.Sort) || '';\n  const order = searchParams.get(QueryParams.Order) || '';\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredPeople = useMemo(() => {\n    let preparedPeople = people.map((person) => {\n      const mother = people.find((mom) => mom.name === person.motherName);\n      const father = people.find((dad) => dad.name === person.fatherName);\n\n      return {\n        ...person,\n        mother,\n        father,\n      };\n    });\n\n    if (query) {\n      preparedPeople = preparedPeople.filter((person) => {\n        return (\n          person.name.toLowerCase().includes(query.toLowerCase().trim())\n          || person.fatherName?.toLowerCase()\n            .includes(query.toLowerCase().trim())\n          || person.motherName?.toLowerCase()\n            .includes(query.toLowerCase().trim())\n        );\n      });\n    }\n\n    if (sex) {\n      preparedPeople = preparedPeople.filter((person) => {\n        return person.sex === sex;\n      });\n    }\n\n    if (centuries.length) {\n      preparedPeople = preparedPeople.filter((person) => {\n        return centuries.find((century) => {\n          return Math.ceil(person.born / 100) === +century;\n        });\n      });\n    }\n\n    if (sort) {\n      preparedPeople = [...preparedPeople].sort((person1, person2) => {\n        switch (sort) {\n          case SortParams.Name:\n          case SortParams.Sex:\n            return person1[sort].localeCompare(person2[sort]);\n          case SortParams.Born:\n          case SortParams.Died:\n            return +person1[sort] - +person2[sort];\n\n          default:\n            throw new Error('Sorting went wrong...');\n        }\n      });\n    }\n\n    if (order) {\n      preparedPeople = preparedPeople.reverse();\n    }\n\n    return preparedPeople;\n  }, [people, query, sex, centuries, sort, order]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              <div className=\"column is-7-tablet is-narrow-desktop\">\n                <PeopleFilters />\n              </div>\n\n              <div className=\"column\">\n                <div className=\"box table-container\">\n                  {hasError ? (\n                    <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n                  ) : (\n                    <>\n                      {!!people.length && !!filteredPeople.length && (\n                        <PeopleTable people={filteredPeople} />\n                      )}\n\n                      {!people.length && (\n                        <p data-cy=\"noPeopleMessage\">\n                          There are no people on the server\n                        </p>\n                      )}\n\n                      {!filteredPeople.length && (\n                        <p>\n                          There are no people matching the current search\n                          criteria\n                        </p>\n                      )}\n                    </>\n                  )}\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate, Route, HashRouter as Router, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\">\n            <Route path=\":slugId?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}